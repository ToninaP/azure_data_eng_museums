{
	"name": "smk_raw_to_parquet",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "smk_artists",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "flatten2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          offset as integer,",
				"          rows as integer,",
				"          found as integer,",
				"          items as (id as string, created as string, modified as string, works as string[], birth_date_end as string[], birth_date_start as string[], death_date_end as string[], death_date_start as string[], gender as string[], name_type as string[])[],",
				"          facets as ({} as string),",
				"          facets_ranges as ({} as string),",
				"          autocomplete as string[]",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> source1",
				"source1 foldDown(unroll(items),",
				"     mapColumn(",
				"          artist_id = items.id,",
				"          birth_date_end = items.birth_date_end,",
				"          birth_date_start = items.birth_date_start,",
				"          death_date_end = items.death_date_end,",
				"          death_date_start = items.death_date_start,",
				"          gender = items.gender",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 foldDown(unrollMultiple(birth_date_end,birth_date_start,death_date_end,death_date_start,gender),",
				"     mapColumn(",
				"          artist_id,",
				"          birth_date_end,",
				"          birth_date_start,",
				"          death_date_end,",
				"          death_date_start,",
				"          gender",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten2"
			]
		}
	}
}